services:
  camunda-prod-postgres:
    image: postgres:latest
    container_name: camunda-prod-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "5432"
    volumes:
      - postgres-prod-data:/var/lib/postgresql/data
    network_mode: bridge

  camunda-prod-bpm:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: camunda-prod-bpm
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: jdbc:postgresql://camunda-prod-postgres:5432/${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      VIRTUAL_HOST: pcb.intellicore.io
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: pcb.intellicore.io
      VIRTUAL_PATH: /camunda/prod
    expose:
      - "8080"
      - "8443"
    depends_on:
      - camunda-prod-postgres
    network_mode: bridge

  pg-prod-backup:
    image: postgres:latest
    container_name: pg-prod-backup
    depends_on:
      - camunda-prod-postgres
    volumes:
      - postgres-prod-backup:/backups
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    entrypoint: ["sh", "-c", "while true; do PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h camunda-prod-postgres -p 5432 -U $POSTGRES_USER $POSTGRES_DB > /backups/backup.sql; sleep 3600; done"]
    network_mode: bridge

volumes:
  postgres-prod-data:
  postgres-prod-backup:
