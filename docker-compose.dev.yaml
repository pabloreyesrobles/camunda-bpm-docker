services:
  camunda-dev-postgres:
    image: postgres:latest
    container_name: camunda-dev-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - camunda-dev-net

  camunda-dev-bpm:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: camunda-dev-bpm
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: jdbc:postgresql://camunda-dev-postgres:5432/${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      WAIT_FOR: camunda-dev-postgres:5432
      VIRTUAL_HOST: pcb.intellicore.io
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: pcb.intellicore.io
      VIRTUAL_PATH: /camunda
    expose:
      - "8080"
      - "8443"
    depends_on:
      - camunda-dev-postgres
    volumes:
      - ./web.xml:/camunda/webapps/engine-rest/WEB-INF/web.xml
    networks:
      - camunda-dev-net

  pg-dev-backup:
    image: postgres:latest
    container_name: pg-dev-backup
    depends_on:
      - camunda-dev-postgres
    volumes:
      - postgres-dev-backup:/backups
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    entrypoint: ["sh", "-c", "while true; do PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h camunda-dev-postgres -p 5432 -U $POSTGRES_USER $POSTGRES_DB > /backups/backup.sql; sleep 3600; done"]
    networks:
      - camunda-dev-net

volumes:
  postgres-dev-data:
  postgres-dev-backup:

networks:
  camunda-dev-net:
